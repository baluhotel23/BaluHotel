const dianCatalogService = require('../../services/DianCatalogService');

// üåç Obtener pa√≠ses
const getCountries = async (req, res, next) => {
  try {
    const countries = dianCatalogService.getAllCountries();
    
    return res.status(200).json({
      error: false,
      message: 'Pa√≠ses obtenidos exitosamente',
      data: countries,
      total: countries.length
    });
  } catch (error) {
    console.error('‚ùå [DIAN] Error obteniendo pa√≠ses:', error);
    next(error);
  }
};

// üèõÔ∏è Obtener departamentos
const getDepartments = async (req, res, next) => {
  try {
    const { countryCode = 'CO' } = req.query;
    const departments = dianCatalogService.getAllDepartments(countryCode);
    
    return res.status(200).json({
      error: false,
      message: 'Departamentos obtenidos exitosamente',
      data: departments,
      total: departments.length,
      filters: { countryCode }
    });
  } catch (error) {
    console.error('‚ùå [DIAN] Error obteniendo departamentos:', error);
    next(error);
  }
};

// üèôÔ∏è Obtener municipios
const getMunicipalities = async (req, res, next) => {
  try {
    const { departmentCode, search, limit = 50 } = req.query;
    
    let municipalities;
    
    if (search) {
      municipalities = dianCatalogService.searchMunicipalities(search, departmentCode);
    } else if (departmentCode) {
      municipalities = dianCatalogService.getMunicipalitiesByDepartment(departmentCode);
    } else {
      municipalities = dianCatalogService.getAllMunicipalities();
    }
    
    // Paginaci√≥n simple
    const limitedResults = municipalities.slice(0, parseInt(limit));
    
    return res.status(200).json({
      error: false,
      message: 'Municipios obtenidos exitosamente',
      data: limitedResults,
      total: municipalities.length,
      showing: limitedResults.length,
      filters: { departmentCode, search, limit }
    });
  } catch (error) {
    console.error('‚ùå [DIAN] Error obteniendo municipios:', error);
    next(error);
  }
};

// üîç Validar ubicaci√≥n
const validateLocation = async (req, res, next) => {
  try {
    const { municipalityCode, departmentCode, countryCode = 'CO' } = req.body;
    
    console.log('üîç [VALIDATION] Datos recibidos:', {
      municipalityCode,
      departmentCode,
      countryCode
    });
    
    const validation = dianCatalogService.validateLocationConsistency(
      municipalityCode,
      departmentCode,
      countryCode
    );
    
    console.log('‚úÖ [VALIDATION] Resultado:', validation);
    
    return res.status(200).json({
      error: false,
      message: 'Validaci√≥n completada',
      data: validation
    });
  } catch (error) {
    console.error('‚ùå [VALIDATION] Error:', error);
    next(error);
  }
};

// üìä Estad√≠sticas de cat√°logos
const getCatalogStats = async (req, res, next) => {
  try {
    const stats = dianCatalogService.getLocationStats();
    
    return res.status(200).json({
      error: false,
      message: 'Estad√≠sticas de cat√°logos obtenidas exitosamente',
      data: stats
    });
  } catch (error) {
    console.error('‚ùå [DIAN] Error obteniendo estad√≠sticas:', error);
    next(error);
  }
};

module.exports = {
  getCountries,
  getDepartments,
  getMunicipalities,
  validateLocation,
  getCatalogStats
};